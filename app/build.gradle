apply plugin: 'com.android.application'
//Applying butterKnife plugin:
apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "developer.moein.simpleaacapp"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    /**
     * TODO (0): Read here!
     * Hi, my name is Moein. you can find me on instagram with MoeinDeveloper id!
     * this is a simple example of android architecture components known as AAC
     * Hope that it will be helpful for you!
     * https://linktr.ee/MoeinDeveloper
     */
    //TODO (1): add AAC(Android architecture components) dependencies here!
    //defining a variable for lifecycle library version:
    def lifecycle_version = "1.1.1"
    // ViewModel and LiveData library:
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    /**
     * If you want to use ViewModel and LiveData separately or non of them, you can implement them by this way:
     *  alternatively - just ViewModel:
     *  implementation "android.arch.lifecycle:viewmodel:$lifecycle_version" // use -ktx for Kotlin
     *  alternatively - just LiveData:
     *  implementation "android.arch.lifecycle:livedata:$lifecycle_version"
     *  alternatively - Lifecycles only (no ViewModel or LiveData).
     *  Support library depends on this lightweight import
     *  implementation "android.arch.lifecycle:runtime:$lifecycle_version"
     */
    //Lifecycle annotation processor compiler
    implementation 'com.android.support:design:27.1.1'
    annotationProcessor "android.arch.lifecycle:compiler:$lifecycle_version"
    //testing:
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    //defining a variable for room library version:
    def room_version = "1.1.1"
    //room library:
    implementation("android.arch.persistence.room:runtime:$room_version") {
        //excluding support core utils module to avoid gradle errors
        exclude group: 'com.android.support'
    }
    //room annotation processor runner:
    annotationProcessor("android.arch.persistence.room:compiler:$room_version") {
        //excluding support core utils module to avoid gradle errors
        exclude group: 'com.android.support'
    }
    //Awesome butterKnife library for injecting views:
    implementation 'com.jakewharton:butterknife:8.8.1'
    //ButterKnife annotation processor
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
}
